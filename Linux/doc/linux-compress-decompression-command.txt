linux压缩和解压缩命令大全
tar命令

　　解包：tar zxvf FileName.tar

　　打包：tar zcvf FileName.tar DirName

 

gz命令

　　解压1：gunzip FileName.gz

　　解压2：gzip -d FileName.gz

　　压缩：gzip FileName

　　.tar.gz 和 .tgz

　　解压：tar zxvf FileName.tar.gz

　　压缩：tar zcvf FileName.tar.gz DirName

   压缩多个文件：tar zcvf FileName.tar.gz DirName1 DirName2 DirName3 ...
 

bz2命令

　　解压1：bzip2 -d FileName.bz2

　　解压2：bunzip2 FileName.bz2

　　压缩： bzip2 -z FileName

　　.tar.bz2

　　解压：tar jxvf FileName.tar.bz2

　　压缩：tar jcvf FileName.tar.bz2 DirName

 

bz命令

　　解压1：bzip2 -d FileName.bz

　　解压2：bunzip2 FileName.bz

　　压缩：tar jcvf FileName.tar.bz

　　.tar.bz

　　解压：tar jxvf FileName.tar.bz

 

Z命令

　　解压：uncompress FileName.Z

　　压缩：compress FileName

　　.tar.Z

　　解压：tar Zxvf FileName.tar.Z

　　压缩：tar Zcvf FileName.tar.Z DirName

 

zip命令

　　解压：unzip FileName.zip

　　压缩：zip FileName.zip DirName

1、把/home目录下面的mydata目录压缩为mydata.zip
zip -r mydata.zip mydata #压缩mydata目录
2、把/home目录下面的mydata.zip解压到mydatabak目录里面
unzip mydata.zip -d mydatabak
3、把/home目录下面的abc文件夹和123.txt压缩成为abc123.zip
zip -r abc123.zip abc 123.txt
4、把/home目录下面的wwwroot.zip直接解压到/home目录里面
unzip wwwroot.zip
5、把/home目录下面的abc12.zip、abc23.zip、abc34.zip同时解压到/home目录里面
unzip abc\*.zip
6、查看把/home目录下面的wwwroot.zip里面的内容
unzip -v wwwroot.zip
7、验证/home目录下面的wwwroot.zip是否完整
unzip -t wwwroot.zip
8、把/home目录下面wwwroot.zip里面的所有文件解压到第一级目录
unzip -j wwwroot.zip

主要参数

-c：将解压缩的结果
-l：显示压缩文件内所包含的文件
-p：与-c参数类似，会将解压缩的结果显示到屏幕上，但不会执行任何的转换
-t：检查压缩文件是否正确
-u：与-f参数类似，但是除了更新现有的文件外，也会将压缩文件中的其它文件解压缩到目录中
-v：执行是时显示详细的信息
-z：仅显示压缩文件的备注文字
-a：对文本文件进行必要的字符转换
-b：不要对文本文件进行字符转换
-C：压缩文件中的文件名称区分大小写
-j：不处理压缩文件中原有的目录路径
-L：将压缩文件中的全部文件名改为小写
-M：将输出结果送到more程序处理
-n：解压缩时不要覆盖原有的文件
-o：不必先询问用户，unzip执行后覆盖原有文件
-P：使用zip的密码选项
-q：执行时不显示任何信息
-s：将文件名中的空白字符转换为底线字符
-V：保留VMS的文件版本信息
-X：解压缩时同时回存文件原来的UID/GID

 

下面是我遇到的：

1，zip文件解压到制定目录

unzip -n nerdtree.zip -d nerdtree


2，查看zip文件里面的内容

unzip -v nerdtree.zip 




linux命令中zxvf分别表示含义:
这些都是tar的参数。.tar.gz是一个压缩包，.tar只是打包而没有压缩，注意这点。
 
 z：通过gzip支持压缩或解压缩。还有其他的压缩或解压缩方式，比如j表示bzip2的方式。
 
x：解压缩。c：是压缩。 
 
v：在压缩或解压缩过程中显示正在处理的文件名
 
f：f后面必须跟上要处理的文件名。也就是说你不能写成这样 tar -zxfv zhcon-0.2.5.tar.gz 
 
z代表gzip的压缩包；x代表解压；v代表显示过程信息；f代表后面接的是文件 
解压并展开压缩包：“tar -xzvf 压缩包名.tar.gz”


7z文件解压与压缩：

解压工具安装方法：sudo apt-get install p7zip

sudo apt install p7zip-full

解压文件命令：

7z x manager.7z -r -o /home/xx

解释如下：

x 代表解压缩文件，并且是按原始目录解压（还有个参数 e 也是解压缩文件，但其会将所有文件都解压到根下，而不是自己原有的文件夹下）manager.7z 是压缩文件，这里大家要换成自己的。如果不在当前目录下要带上完整的目录

-r 表示递归所有的子文件夹

-o 是指定解压到的目录，这里大家要注意-o后是没有空格的直接接目录


压缩文件命令： 7z a -t7z -r manager.7z /home/manager/*

解释如下：

a 代表添加文件／文件夹到压缩包

-t 是指定压缩类型 一般我们定为7z

-r 表示递归所有的子文件夹，manager.7z 是压缩好后的压缩包名，/home/manager/* 是要压缩的目录，＊是表示该目录下所有的文件。




快如闪电：Linux多线程压缩软件pigz和压缩神器zstd、p7zip

    前言：pigz和zstd这两个都不支持直接压缩文件夹，如有支持多线程同时支持压缩文件夹的压缩软件（XZ除外），麻烦评论区留言，谢谢。

pigz简介

pigz是GZip的并行版(pigz，即 Parallel Implementation of GZip)，作者为Mark Adler。
它充分利用了现代多核处理器的性能，大幅提高压缩解压的速度。
pigz安装

#Ubuntu：
apt install -y pigz
#CentOS：
yum -y install pigz

pigz实例

1、压缩单个文件

pigz -k your_file_name
# 加上-k选项保留原始文件，会在当前工作目录获得压缩后的your_file_name.gz 文件

2、解压单个文件

unpigz -d your_file_name.gz
# 同样，如果需要保留.gz文件，记得加上-k选项

3、压缩文件夹

tar -cvf - dir1 dir2 dir3 | pigz > output.tar.gz
# pigz没有压缩文件夹的选项，只能压缩单个文件。若想压缩文件夹，可以结合tar使用

4、解压文件夹

pigz -d output.tar.gz
# 这样得到的是output.tar，再通过tar解打包就好了
tar -xzvf output.tar.gz    # 也可以直接用tar命令解压

pigz常用参数

-0 ~ -9 压缩等级，数字越大压缩率越高，速度越慢，默认为6
-k --keep 压缩后不删除原始文件
-l --list 列出压缩输入的内容
-K --zip Compress to PKWare zip (.zip) single entry format
-d --decompress 解压缩输入
-p --processes n 使用n核处理，默认为使用所有CPU核心

ZSTD简介

Zstandard 简称Zstd，是一种快速的无损压缩算法，以 zlib 级为目标的实时压缩场景和更好的压缩比。它可以将压缩速度交换为更高的压缩比率，同时支持非常快的解码器。Zstd压缩包为 .zst 格式。
Zstd安装

# Ubuntu
apt install -y zstd
# CentOS
yum install -y zstd
# 编译安装
git clone https://github.com/facebook/zstd.git
cd zstd; make; sudo make install

Zstd实例

1、压缩单个文件

zstd -T0 your_file_name
# 加上-T0选项使用所有CPU核心，会在当前工作目录获得压缩后的your_file_name.zst 文件

2、解压单个文件

zstd -T0 -d your_file_name.zst

3、压缩文件夹

tar -cvf - dir1 dir2 dir3 | zstd -T0  > output.tar.zst
# zstd没有压缩文件夹的选项，只能压缩单个文件。若想压缩文件夹，可以结合tar使用

4、解压文件夹

zstd -T0 -d output.tar.zst
# 这样得到的是output.tar，再通过tar解打包就好了

Zstd常用参数

 -#     : 压缩级别(1-19，默认值为3)
 -d     : 解压
 -o file: 结果存储在文件中
 -f     : 在没有提示的情况下覆盖输出并(解压)压缩链接
--rm    : 成功解压缩后删除源文件
 -h/-H  : 显示帮助/长帮助并退出
 -v     : 详细模式
 -q     : 静默输出
 -l     : 输出zstd压缩包中的信息
--ultra : 启用超过19级，最多22级(需要更多内存)
 -T#    : 使用几个线程进行压缩(默认值:1个，0位自动使用所有CPU核心)
--format=gzip : 将文件压缩为.gz格式

p7zip简介

p7Zip是一款用于Linux平台的高压缩比的存档格式 7z 的管理器。通常使用 7-Zip 的 7z 格式能比使用 zip 格式的压缩文件小30-70%。
7z 是一种主流高效的压缩格式，它拥有极高的压缩比。在计算机科学中，7z是一种可以使用多种压缩算法进行数据压缩的档案格式。
p7zip安装

#Ubuntu：
apt install -y p7zip
#CentOS：
yum -y install p7zip

p7zip实例

1、压缩文件/文件夹

# 压缩文件（支持单文件及多文件）
7za a -r mydata.7z ./*
# 压缩文件夹
7za a -r mydata.7z ./*

2、解压

7za x mydata.7z

p7zip常用参数

a 添加文件／文件夹到压缩包
x 解压压缩包到当前目录
-r 递归所有的子文件夹
-t 指定压缩类型，默认是7z，也支持zip、bz2等快如闪电：Linux多线程压缩软件pigz和压缩神器zstd、p7zip
运维猿Winter
IP属地: 广东
0.209
2022.03.01 13:34:16
字数 410阅读 5,480

    前言：pigz和zstd这两个都不支持直接压缩文件夹，如有支持多线程同时支持压缩文件夹的压缩软件（XZ除外），麻烦评论区留言，谢谢。

pigz简介

pigz是GZip的并行版(pigz，即 Parallel Implementation of GZip)，作者为Mark Adler。
它充分利用了现代多核处理器的性能，大幅提高压缩解压的速度。
pigz安装

#Ubuntu：
apt install -y pigz
#CentOS：
yum -y install pigz

pigz实例

1、压缩单个文件

pigz -k your_file_name
# 加上-k选项保留原始文件，会在当前工作目录获得压缩后的your_file_name.gz 文件

2、解压单个文件

unpigz -d your_file_name.gz
# 同样，如果需要保留.gz文件，记得加上-k选项

3、压缩文件夹

tar -cvf - dir1 dir2 dir3 | pigz > output.tar.gz
# pigz没有压缩文件夹的选项，只能压缩单个文件。若想压缩文件夹，可以结合tar使用

4、解压文件夹

pigz -d output.tar.gz
# 这样得到的是output.tar，再通过tar解打包就好了
tar -xzvf output.tar.gz    # 也可以直接用tar命令解压

pigz常用参数

-0 ~ -9 压缩等级，数字越大压缩率越高，速度越慢，默认为6
-k --keep 压缩后不删除原始文件
-l --list 列出压缩输入的内容
-K --zip Compress to PKWare zip (.zip) single entry format
-d --decompress 解压缩输入
-p --processes n 使用n核处理，默认为使用所有CPU核心

ZSTD简介

Zstandard 简称Zstd，是一种快速的无损压缩算法，以 zlib 级为目标的实时压缩场景和更好的压缩比。它可以将压缩速度交换为更高的压缩比率，同时支持非常快的解码器。Zstd压缩包为 .zst 格式。
Zstd安装

# Ubuntu
apt install -y zstd
# CentOS
yum install -y zstd
# 编译安装
git clone https://github.com/facebook/zstd.git
cd zstd; make; sudo make install

Zstd实例

1、压缩单个文件

zstd -T0 your_file_name
# 加上-T0选项使用所有CPU核心，会在当前工作目录获得压缩后的your_file_name.zst 文件

2、解压单个文件

zstd -T0 -d your_file_name.zst

3、压缩文件夹

tar -cvf - dir1 dir2 dir3 | zstd -T0  > output.tar.zst
# zstd没有压缩文件夹的选项，只能压缩单个文件。若想压缩文件夹，可以结合tar使用

4、解压文件夹

zstd -T0 -d output.tar.zst
# 这样得到的是output.tar，再通过tar解打包就好了

Zstd常用参数

 -#     : 压缩级别(1-19，默认值为3)
 -d     : 解压
 -o file: 结果存储在文件中
 -f     : 在没有提示的情况下覆盖输出并(解压)压缩链接
--rm    : 成功解压缩后删除源文件
 -h/-H  : 显示帮助/长帮助并退出
 -v     : 详细模式
 -q     : 静默输出
 -l     : 输出zstd压缩包中的信息
--ultra : 启用超过19级，最多22级(需要更多内存)
 -T#    : 使用几个线程进行压缩(默认值:1个，0位自动使用所有CPU核心)
--format=gzip : 将文件压缩为.gz格式

p7zip简介

p7Zip是一款用于Linux平台的高压缩比的存档格式 7z 的管理器。通常使用 7-Zip 的 7z 格式能比使用 zip 格式的压缩文件小30-70%。
7z 是一种主流高效的压缩格式，它拥有极高的压缩比。在计算机科学中，7z是一种可以使用多种压缩算法进行数据压缩的档案格式。
p7zip安装

#Ubuntu：
apt install -y p7zip
#CentOS：
yum -y install p7zip

p7zip实例

1、压缩文件/文件夹

# 压缩文件（支持单文件及多文件）
7za a -r mydata.7z ./*
# 压缩文件夹
7za a -r mydata.7z ./*

2、解压

7za x mydata.7z

p7zip常用参数

a 添加文件／文件夹到压缩包
x 解压压缩包到当前目录
-r 递归所有的子文件夹
-t 指定压缩类型，默认是7z，也支持zip、bz2等

解压.xz文件
unxz filename.tar.xz
xz -dk filename.tar.xz
d:解压.xz文件
k:保留原文件，不保留则去掉k
tar -xvf filename.tar
