 Linux 下 mkdir 循环创建目录   
头文件库： 　　
#include <sys/stat.h> 　
#include <sys/types.h> 　　
函数原型： 　　int mkdir(const char *pathname, mode_t mode); 　　
函数说明： 　　mkdir()函数以mode方式创建一个以参数pathname命名的目录，mode定义新创建目录的权限。 　　
返回值： 　　若目录创建成功，则返回0；否则返回-1，并将错误记录到全局变量errno中。 　　
mode方式： 　　
S_IRWXU 00700权限，代表该文件所有者拥有读，写和执行操作的权限 
S_IRUSR(S_IREAD) 00400权限，代表该文件所有者拥有可读的权限 
S_IWUSR(S_IWRITE) 00200权限，代表该文件所有者拥有可写的权限 
S_IXUSR(S_IEXEC) 00100权限，代表该文件所有者拥有执行的权限 
S_IRWXG 00070权限，代表该文件用户组拥有读，写和执行操作的权限 
S_IRGRP 00040权限，代表该文件用户组拥有可读的权限 
S_IWGRP 00020权限，代表该文件用户组拥有可写的权限 
S_IXGRP 00010权限，代表该文件用户组拥有执行的权限 
S_IRWXO 00007权限，代表其他用户拥有读，写和执行操作的权限 
S_IROTH 00004权限，代表其他用户拥有可读的权限 
S_IWOTH 00002权限，代表其他用户拥有可写的权限 
S_IXOTH 00001权限，代表其他用户拥有执行的权限 

Example:
   int isCreate = mkdir(path,S_IRUSR | S_IWUSR | S_IXUSR | S_IRWXG | S_IRWXO);
   if( !isCreate )
   printf("create path:%s\n",path);
   else
   printf("create path failed! error code : %s \n",isCreate,path); 

例子：
#include <unistd.h>
#include <sys/types.h>
#include <sys/stat.h>
char folder_dir[128];
#folder_dir，自己初始化一下。
if((access(folder_dir, 0)) != -1)
{   
	printf("Dir exists\n");
}
else
{                           
	printf("not exist\n");
	mkdir(folder_dir,S_IRWXU);           
}

